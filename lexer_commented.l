/*
 * lexer_commented.l
 *
 * This is a sample Lex (Flex) file with detailed comments for each section.
 * It is designed to work with a Yacc/Bison parser for a C-like language.
 */

%{
/* C code section: included in the generated lexer source file. */
#include <stdio.h>
#include "y.tab.h" // Include the header generated by yacc/bison
%}

/* Definitions section: define patterns and macros here. */
DIGIT   [0-9]
ID      [a-zA-Z_][a-zA-Z0-9_]*
WS      [ \t\r\n]+

%%
/* Rules section: each rule has a pattern and an action. */

{WS}            {/* Ignore whitespace */}
{DIGIT}+        { yylval = atoi(yytext); return NUMBER; }
{ID}            { yylval = strdup(yytext); return IDENTIFIER; }
"+"             { return PLUS; }
"-"             { return MINUS; }
"*"             { return TIMES; }
"/"             { return DIVIDE; }
"="             { return ASSIGN; }
";"             { return SEMICOLON; }
"("             { return LPAREN; }
")"             { return RPAREN; }
"{"             { return LBRACE; }
"}"             { return RBRACE; }
"if"            { return IF; }
"else"          { return ELSE; }
"for"           { return FOR; }
"while"         { return WHILE; }
"return"        { return RETURN; }
.               { /* Catch-all for any other character */ }

%%
/* User code section: additional C code, helper functions, etc. */
int yywrap() { return 1; }
